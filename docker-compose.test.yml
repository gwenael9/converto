version: '3.8'

services:
  db-test:
    image: postgres:latest
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio-test:
    image: minio/minio
    container_name: minio-test
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      MINIO_ROOT_USER: test_access_key
      MINIO_ROOT_PASSWORD: test_secret_key
    volumes:
      - minio_test_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    entrypoint: >
      /bin/sh -c "
        minio server /data --console-address ':9001' &
        sleep 10
        mc alias set myminio http://localhost:9000 test_access_key test_secret_key
        mc mb --ignore-existing myminio/test-bucket
        mc anonymous set public myminio/test-bucket
        wait
      "

  rabbitmq-test:
    image: rabbitmq:3-management
    container_name: rabbitmq-test
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=test_user
      - RABBITMQ_DEFAULT_PASS=test_password

  microservice-converto-test:
    build: 
      context: ./microservice-converto
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=test
      - S3_ACCESS_KEY=test_access_key
      - S3_SECRET_KEY=test_secret_key
      - S3_BUCKET=test-bucket
      - S3_ENDPOINT=http://minio-test:9000
      - RABBITMQ_URL=amqp://test_user:test_password@rabbitmq-test:5672
    depends_on:
      - minio-test
      - rabbitmq-test
    volumes:
      - ./microservice-converto/test-files:/app/test-files

  api-test:
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "4001:4000"
    environment:
      - NODE_ENV=test
      - DB_HOST=db-test
      - DB_USER=test_user
      - DB_PASSWORD=test_password
      - DB_DATABASE=test_db
      - DB_PORT=5432
    depends_on:
      db-test:
        condition: service_healthy
    volumes:
      - ./api:/app
      - /app/node_modules

volumes:
  minio_test_data: 