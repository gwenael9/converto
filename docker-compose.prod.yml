services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  api:
    image: gwenael9/converto-api:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env.prod
    environment:
      - DB_HOST=${DB_HOST}
    restart: always

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.production
    ports:
      - "8080:80"
    depends_on:
      - api
      - minio
    restart: always

volumes:
  postgres_data:
  minio_data: